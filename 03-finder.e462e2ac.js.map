{"mappings":"AA8CAA,QAAQC,IAAI,kBAtBQ,EAACC,EAAYC,KAC/B,MAAMC,EAAcF,IAIdG,EAAK,OAELC,EAAIH,EADM,C,GAHL,I,GACA,K,GAEeE,GACID,GACxBG,EAAKC,KAAKC,MAAMH,GAAK,GAE3BN,QAAQC,IAAI,gBAAiBS,KAAKC,UAAUP,IAE5C,IAAK,IAAIQ,EAAI,EAAGA,GAAK,MAAOA,EAC1B,IAAK,IAAIC,EAAI,EAAGA,GAAK,MAAOA,EAC1B,IAAK,IAAIC,EAAI,EAAGA,GAAK,MAAOA,EAC1B,IAZK,IAYKF,IAAM,GAXX,KAWqBC,IAAM,GAAKR,EAAKS,IAAM,IAAMP,EACpD,OAAOG,KAAKC,UAAU,C,EAAEC,E,EAAGC,E,EAAGC,KAMTC,EAnCA,WAI7B,OAHAH,EAAIJ,KAAKQ,KAAqB,IAAhBR,KAAKS,UACnBJ,EAAIL,KAAKQ,KAAqB,IAAhBR,KAAKS,UACnBH,EAAIN,KAAKQ,KAAqB,IAAhBR,KAAKS,UACZ,C,EAAEL,E,EAAGC,E,EAAGC,MAdqC,SAA/BI,EAAGC,GACxB,MAAMC,GAAEA,EAAEC,GAAEA,EAAEhB,GAAEA,GAAOa,GACjBN,EAAEA,EAACC,EAAEA,EAACC,EAAEA,GAAMK,EACpB,IAAIG,EAAIV,EAAIQ,EACRG,EAAIV,EAAIQ,EACRG,EAAIV,EAAIT,EAEZ,OADWG,KAAKiB,KAAKH,EAAIA,EAAIC,EAAIA,EAAIC,EAAIA","sources":["src/js/03-finder.js"],"sourcesContent":["//Формулу расстояния между точками  получаем из теоремы Пифагора:\nfunction countDistance(n, m) {\n  const { x1, y1, z1 } = n;\n  const { x, y, z } = m;\n  let a = x - x1;\n  let b = y - y1;\n  let c = z - z1;\n  let dist = Math.sqrt(a * a + b * b + c * c);\n  return dist;\n}\n// Функция генерирует рандомную точку.\nfunction createRandomPoint() {\n  x = Math.ceil(Math.random() * 100);\n  y = Math.ceil(Math.random() * 100);\n  z = Math.ceil(Math.random() * 100);\n  return { x, y, z };\n}\n\n// Функция searchPoint получает на вход 2 функци callback  и вызывает их. Первая создает рандомную точку, а второй расчитывает\n// расстояние от нашей точки с координатами (100, 5100, 510100) до рандомной один раз .\n// Полученное расстояние возводится в квадрат (исходя из того что мы вычисляем корень квадратный при нахождении расстояния между точками)\n//  и округляется - мы ищем сумму квадратов разниц координат, она должна быть целой.\n// Затем для всех точек куба вычисляются квадраты расстояний.Если очередной квадрат совпадает со значением полученным\n// на предыдущем шаге - точка найдена.\nconst searchPoint = (callback_1, callback_2) => {\n  const randomPoint = callback_1();\n  // задаем координаты радарной точки.\n  const x1 = 100;\n  const y1 = 5100;\n  const z1 = 510100;\n  const myPoint = { x1, y1, z1 };\n  const d = callback_2(myPoint, randomPoint);\n  const d2 = Math.round(d ** 2);\n\n  console.log('Random point ', JSON.stringify(randomPoint));\n\n  for (let x = 0; x <= 100; ++x) {\n    for (let y = 0; y <= 100; ++y) {\n      for (let z = 0; z <= 100; ++z) {\n        if ((x1 - x) ** 2 + (y1 - y) ** 2 + (z1 - z) ** 2 === d2)\n          return JSON.stringify({ x, y, z });\n      }\n    }\n  }\n};\n\nconsole.log('Function result', searchPoint(createRandomPoint, countDistance));\n"],"names":["console","log","callback_1","callback_2","randomPoint","z1","d","d2","Math","round","JSON","stringify","x","y","z","$9c949df540724deb$var$searchPoint","ceil","random","n","m","x1","y1","a","b","c","sqrt"],"version":3,"file":"03-finder.e462e2ac.js.map"}